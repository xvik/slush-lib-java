apply plugin: 'maven-publish'

publishing {
    publications {
        mavenJava(MavenPublication) {
            if (plugins.hasPlugin('war')) {
                from components.web
            } else {
                from components.java
            }

            artifact sourcesJar
            artifact javadocJar

            pom.withXml {
                // gradle sets runtime scope for all dependencies.. fixing
                asNode().dependencies.'*'.findAll() {
                    it.scope.text() == 'runtime' && project.configurations.compile.allDependencies.find { dep ->
                        dep.name == it.artifactId.text()
                    }
                }.each() {
                    it.scope*.value = 'compile'
                }

                asNode().dependencies.'*'.findAll() {
                    project.configurations.optional.allDependencies.find { dep ->
                        dep.name == it.artifactId.text()
                    }
                }.each() {
                    it.scope*.value = 'compile'
                    it.appendNode('optional', 'true')
                }

                asNode().dependencies.'*'.findAll() {
                    project.configurations.provided.allDependencies.find { dep ->
                        dep.name == it.artifactId.text()
                    }
                }.each() {
                    it.scope*.value = 'provided'
                }

                def root = asNode()
                root.appendNode('name', project.name)
                root.appendNode('description', project.description)
                root.appendNode('url', github.site)
                root.children().last() + pomConfig

                asNode().scm[0].appendNode('tag', project.version.replaceAll('-SNAPSHOT', ''))
            }
        }
    }
}


task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}