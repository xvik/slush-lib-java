import org._10ne.gradle.rest.RestTask

buildscript {
    repositories {
        mavenCentral()
        jcenter()
        // rest plugin
        maven { url 'http://dl.bintray.com/content/noamt/gradle-plugins' }
    }
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:0.5'
        classpath 'org._10ne.gradle:rest-gradle-plugin:0.1.1'
        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:1.0.2'
    }
}

repositories {
    mavenLocal()
    jcenter()
    mavenCentral()
}

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'rest'
apply plugin: 'jacoco'
apply plugin: 'com.github.kt3k.coveralls'

sourceCompatibility = 1.6
targetCompatibility = 1.6

version = '<%= libVersion %>'
group = '<%= libPackage %>'
description = '<%= libDescription %>'

// convention: project.name == github project name == bintray package page
project.ext {
    github = {
        user = '<%= userName %>'
    }
    bintray = {
        user = project.hasProperty('bintrayUser') ? bintrayUser : 'USER' // configured in ~/.gradle/gradle.properties
        key = project.hasProperty('bintrayKey') ? bintrayKey : 'KEY' // configured in ~/.gradle/gradle.properties
        repo = '<%= libRepo %>'
        dryRun = false // whether to run this as dry-run, without deploying (TEST RUN)
        publish = true //If version should be auto published after an upload
    }
    license = 'MIT'
    licenseDesc = 'The MIT License'
    tags = [<% _.forEach(libTags, function(tag, i) { %>'<%= tag %>'<%; if (i<libTags.length-1){%>,<%} }); %>]
    // extend pom for maven central acceptance
    pomConfig = {
        scm {
            url github.scm
            connection github.scmConnection
        }
        licenses {
            license {
                name licenseDesc
                url github.licenseUrl
                distribution "repo"
            }
        }
        developers {
            developer {
                id "<%= userName %>"
                name "<%= authorName %>"
                email "<%= authorEmail %>"
            }
        }
    }
}

apply from: 'gradle/github.gradle'
apply from: 'gradle/maven.gradle'
apply from: 'gradle/bintray.gradle'

dependencies {
    compile 'org.slf4j:slf4j-api:1.7.7'

    testCompile group: 'junit', name: 'junit', version: '4.11'
    testCompile 'ch.qos.logback:logback-classic:1.1.2'
    testCompile 'org.slf4j:jul-to-slf4j:1.7.7'
    testCompile 'org.spockframework:spock-core:0.7-groovy-2.0'
}

jacocoTestReport {
    reports {
        xml.enabled = true // coveralls plugin depends on xml format report
        html.enabled = true
    }
}

// no way to do it from web ui and bintray plugin doesn't support it
// NOTE: files wil remain unpublished so go to bintray and publish them, after that do maven central sync (on web ui)
task bintraySignVersion(type: RestTask, description: 'Sign version files (auto sign bintray feature') {
    httpMethod = 'post'
    uri = bintray.signApiUrl
    username = bintray.user
    password = bintray.key
}
bintraySignVersion.doFirst {
    // cancel task in dry run mode
    if (bintray.dryRun) {
        logger.warn('Skipping version signing in dry run mode')
        throw new StopExecutionException()
    }
}

task bintrayPublish(type: RestTask, dependsOn: 'bintraySignVersion', description: 'Sign version files and publish sign files') {
    httpMethod = 'post'
    uri = bintray.publishApiUrl
    username = bintray.user
    password = bintray.key
}
bintrayPublish.doFirst {
    // cancel task in dry run mode
    if (bintray.dryRun) {
        logger.warn('Skipping version publishing in dry run mode')
        throw new StopExecutionException()
    }
}

bintrayPublish.mustRunAfter bintrayUpload

task wrapper(type: Wrapper) {
    gradleVersion = '2.0'
}

task install(dependsOn: 'publishMavenJavaPublicationToMavenLocal', description: 'install to local maven repo only') << {
    logger.warn "INSTALLED $project.group:$project.name:$project.version"
}

// to enable automatic artifacts signing add dependency to signing task:
// dependsOn: [bintrayUpload, bintrayPublish]
task release(dependsOn: [bintrayUpload], description: 'publish version to bintray and sign all jars') << {
    logger.warn "RELEASED $project.group:$project.name:$project.version"
}



